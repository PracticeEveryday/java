package extends1.overiding;

public class ElectricCar extends Car {
    public void charge() {
        System.out.println("차를 충전합니다.");
    }

    /**
     * move를 새로 재정의한 것이다.
     * 부모의 메서드가 마음에 들지 않아 다시 재정의하는 것!!
     *
     * 부모의 기능을 자식이 새롭게 재정의하는 것을 메서드 `오버라이딩`이라고 한다.
     */
    @Override
    public void move() {
        System.out.println("전기차를 빠르게 이동합니다.");
    }
}

/**
 * @Override 이렇게 골뱅이로 시작하는 것은 프로그램이 읽을 수 있는 특별한 주석과 비슷하다.
 * 위 어노테이션은 컴파일러가 오버라이딩 된 메서드가 올바르지 않을 때 컴파일 에러를 낼 수 있도록 도와주는 어노테이션이다.
 * 즉, 실수로 메서드 오버라이딩을 하지 못하는 경우를 방지해주는 것이다.
 * 필수는 아니지만 코드의 명확성을 위해 붙여주는 것이 좋다.
 */

/**
 * 오버로딩 vs 오버라이딩
 * 오버로딩은 매서드 이름이 같고, 매개변수가 다른 메서드를 여러개 정의한 것이다.
 * 오버로딩은 `과적`이라는 뜻인데 물건을 과하게 담았다는 것이다 즉, 같은 이름의 메서드를 여러개 정의했다고 이해하면 쉽다.
 *
 * 오버라이딩
 * 오버라이딩은 하위 클래스에서 상위 클래스를 재정의하는 것이다.
 * 즉, 부모의 기능을 자식이 다시 정의하는 것이다.
 * 오버라이딩은 재정의라는 뜻으로 기존 기능을 다시 정의한다고 이해하면 쉽다.
 */